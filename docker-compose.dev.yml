version: "3.8"
services:
  app:
    container_name: telebot-nest-server
    build:
      context: ./
      dockerfile: ./docker/nest/dev.dockerfile
    working_dir: /home/node/app
    command: npm start
    restart: unless-stopped
    tty: true
    volumes:
      - .:/home/node/app
      - /home/node/app/node_modules
    networks:
      - telebot-nest-network
    depends_on:
      - database
    ports:
      - 5001:5001
    env_file:
      - .env
    environment:
      APP_ENV: dev
      APP_PORT: 5001
      DB_DEBUG: 1
      DB_HOST: database
      DB_DATABASE: telebot
      DB_USERNAME: root
      DB_PASSWORD: 123456
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TOKEN_SECRET_KEY: ${TOKEN_SECRET_KEY}

  database:
    container_name: postgres-telebot-database
    image: postgres:14.1
    restart: unless-stopped
    volumes:
      - telebot-database:/var/lib/postgres
      - ./docker/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: telebot
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
    ports:
      - 5433:5432
    networks:
      - telebot-nest-network

  redis:
    container_name: redis-telebot
    image: redis
    restart: unless-stopped
    ports:
      - 6380:6379
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - telebot-nest-network
    volumes:
      - neko-telebot-cache:/data

networks:
  telebot-nest-network:
    driver: bridge

volumes:
  telebot-database:
    driver: local
  neko-telebot-cache:
    driver: local
